// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Todo Component Tests should return user detail and present on title 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View>
    <Text
      testID="username-text"
    >
      ziv
    </Text>
  </View>
  <View
    style={
      Object {
        "padding": 10,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      clearButtonMode="while-editing"
      onChangeText={[Function]}
      placeholder="what up?"
      rejectResponderTermination={true}
      style={
        Object {
          "borderColor": "gray",
          "borderWidth": 1,
          "fontSize": 20,
          "padding": 10,
        }
      }
      testID="todo-input-text"
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Add
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginBottom": 10,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          All
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Completed
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Uncompleted
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={
      <Text>
        No Todo Items Found
      </Text>
    }
    data={
      Array [
        Object {
          "id": 0,
          "isDone": false,
          "text": "fix car",
        },
        Object {
          "id": 1,
          "isDone": false,
          "text": "fix car",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#dbddde",
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "white",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {},
                Object {
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "borderColor": "gray",
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "height": 50,
                  "justifyContent": "center",
                  "padding": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 18,
                    },
                    Object {
                      "textDecorationLine": "none",
                    },
                  ]
                }
              >
                fix car
              </Text>
            </View>
          </View>
          <View />
          <View />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#dbddde",
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "white",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {},
                Object {
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "borderColor": "gray",
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "height": 50,
                  "justifyContent": "center",
                  "padding": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 18,
                    },
                    Object {
                      "textDecorationLine": "none",
                    },
                  ]
                }
              >
                fix car
              </Text>
            </View>
          </View>
          <View />
          <View />
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`Todo Component Tests should the same screen snapshot when adding new todo in list 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessibilityRole="button"
    accessibilityState={Object {}}
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
  >
    <View
      style={
        Array [
          Object {},
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#007AFF",
              "fontSize": 18,
              "margin": 8,
              "textAlign": "center",
            },
          ]
        }
      >
        Load Data
      </Text>
    </View>
  </View>
  <View
    style={
      Object {
        "padding": 10,
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      clearButtonMode="while-editing"
      onChangeText={[Function]}
      placeholder="what up?"
      rejectResponderTermination={true}
      style={
        Object {
          "borderColor": "gray",
          "borderWidth": 1,
          "fontSize": 20,
          "padding": 10,
        }
      }
      testID="todo-input-text"
      underlineColorAndroid="transparent"
      value=""
    />
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Add
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "flexDirection": "row",
        "justifyContent": "space-around",
        "marginBottom": 10,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          All
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Completed
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={Object {}}
      accessible={true}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Uncompleted
        </Text>
      </View>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={
      <Text>
        No Todo Items Found
      </Text>
    }
    data={
      Array [
        Object {
          "id": 0,
          "isDone": false,
          "text": "fix car",
        },
        Object {
          "id": 1,
          "isDone": false,
          "text": "fix car",
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#dbddde",
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "white",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {},
                Object {
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "borderColor": "gray",
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "height": 50,
                  "justifyContent": "center",
                  "padding": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 18,
                    },
                    Object {
                      "textDecorationLine": "none",
                    },
                  ]
                }
              >
                fix car
              </Text>
            </View>
          </View>
          <View />
          <View />
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          style={
            Array [
              Object {
                "backgroundColor": "#dbddde",
                "overflow": "hidden",
              },
              Object {
                "backgroundColor": "white",
              },
            ]
          }
        >
          <View
            onLayout={[Function]}
            onMoveShouldSetResponder={[Function]}
            onMoveShouldSetResponderCapture={[Function]}
            onResponderEnd={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderReject={[Function]}
            onResponderRelease={[Function]}
            onResponderStart={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            onStartShouldSetResponderCapture={[Function]}
            style={
              Array [
                Object {},
                Object {
                  "transform": Array [
                    Object {
                      "translateX": 0,
                    },
                  ],
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "borderColor": "gray",
                  "borderStyle": "solid",
                  "borderWidth": 1,
                  "height": 50,
                  "justifyContent": "center",
                  "padding": 10,
                }
              }
            >
              <Text
                style={
                  Array [
                    Object {
                      "fontSize": 18,
                    },
                    Object {
                      "textDecorationLine": "none",
                    },
                  ]
                }
              >
                fix car
              </Text>
            </View>
          </View>
          <View />
          <View />
        </View>
      </View>
      <View
        style={
          Object {
            "height": 0,
          }
        }
      />
    </View>
  </RCTScrollView>
</View>
`;
